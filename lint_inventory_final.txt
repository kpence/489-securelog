EntryParser.h:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
EntryParser.h:0:  No #ifndef header guard found, suggested CPP variable is: ENTRYPARSER_H_  [build/header_guard] [5]
EntryParser.h:3:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
FileReaderWriter.h:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
FileReaderWriter.h:0:  No #ifndef header guard found, suggested CPP variable is: FILEREADERWRITER_H_  [build/header_guard] [5]
FileReaderWriter.h:8:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
FileReaderWriter.h:24:  Is this a non-const reference? If so, make const or use a pointer: string& result  [runtime/references] [2]
error.h:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
error.h:0:  No #ifndef header guard found, suggested CPP variable is: ERROR_H_  [build/header_guard] [5]
error.h:2:  Include the directory when naming .h files  [build/include_subdir] [4]
errortype.h:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
errortype.h:0:  No #ifndef header guard found, suggested CPP variable is: ERRORTYPE_H_  [build/header_guard] [5]
hospitalstate.h:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
hospitalstate.h:0:  No #ifndef header guard found, suggested CPP variable is: HOSPITALSTATE_H_  [build/header_guard] [5]
hospitalstate.h:9:  Include the directory when naming .h files  [build/include_subdir] [4]
hospitalstate.h:13:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
hospitalstate.h:30:  Is this a non-const reference? If so, make const or use a pointer: FileReaderWriter& frw  [runtime/references] [2]
hospitalstate.h:30:  Is this a non-const reference? If so, make const or use a pointer: EntryParser& p  [runtime/references] [2]
hospitalstate.h:31:  Is this a non-const reference? If so, make const or use a pointer: map<pair<char,string>,person_state>& person_states  [runtime/references] [2]
hospitalstate.h:32:  Is this a non-const reference? If so, make const or use a pointer: string& rooms  [runtime/references] [2]
hospitalstate.h:34:  Is this a non-const reference? If so, make const or use a pointer: FileReaderWriter& frw  [runtime/references] [2]
hospitalstate.h:34:  Is this a non-const reference? If so, make const or use a pointer: EntryParser& p  [runtime/references] [2]
hospitalstate.h:34:  Is this a non-const reference? If so, make const or use a pointer: int& in_hospital  [runtime/references] [2]
hospitalstate.h:34:  Is this a non-const reference? If so, make const or use a pointer: int& touched  [runtime/references] [2]
hospitalstate.h:34:  Is this a non-const reference? If so, make const or use a pointer: string& room_in  [runtime/references] [2]
hospitalstate.h:49:  Is this a non-const reference? If so, make const or use a pointer: FileReaderWriter& frw  [runtime/references] [2]
hospitalstate.h:49:  Is this a non-const reference? If so, make const or use a pointer: EntryParser& p  [runtime/references] [2]
hospitalstate.h:49:  Is this a non-const reference? If so, make const or use a pointer: map<pair<char,string>,person_state>& person_states  [runtime/references] [2]
hospitalstate.h:49:  Is this a non-const reference? If so, make const or use a pointer: string& rooms  [runtime/references] [2]
EntryParser.cc:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
EntryParser.cc:15:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
EntryParser.cc:32:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
EntryParser.cc:138:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
EntryParser.cc:139:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
FileReaderWriter.cc:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
FileReaderWriter.cc:5:  Found C system header after C++ system header. Should be: FileReaderWriter.h, c system, c++ system, other.  [build/include_order] [4]
FileReaderWriter.cc:10:  <thread> is an unapproved C++11 header.  [build/c++11] [5]
FileReaderWriter.cc:11:  <chrono> is an unapproved C++11 header.  [build/c++11] [5]
FileReaderWriter.cc:22:  Include the directory when naming .h files  [build/include_subdir] [4]
FileReaderWriter.cc:24:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
FileReaderWriter.cc:189:  Consider using rand_r(...) instead of rand(...) for improved thread safety.  [runtime/threadsafe_fn] [2]
logappend.cc:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
logappend.cc:2:  Found C system header after C++ system header. Should be: logappend.h, c system, c++ system, other.  [build/include_order] [4]
logappend.cc:6:  Found C system header after C++ system header. Should be: logappend.h, c system, c++ system, other.  [build/include_order] [4]
logappend.cc:13:  Include the directory when naming .h files  [build/include_subdir] [4]
logappend.cc:15:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
logappend.cc:21:  Static/global string variables are not permitted.  [runtime/string] [4]
logappend.cc:61:  Almost always, snprintf is better than strcpy  [runtime/printf] [4]
logread.cc:0:  No copyright message found.  You should have a line: "Copyright [year] <Copyright Owner>"  [legal/copyright] [5]
logread.cc:2:  Found C system header after C++ system header. Should be: logread.h, c system, c++ system, other.  [build/include_order] [4]
logread.cc:4:  Found C system header after C++ system header. Should be: logread.h, c system, c++ system, other.  [build/include_order] [4]
logread.cc:13:  Include the directory when naming .h files  [build/include_subdir] [4]
logread.cc:17:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
logread.cc:143:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
logread.cc:145:  Use int16/int64/etc, rather than the C type long  [runtime/int] [4]
